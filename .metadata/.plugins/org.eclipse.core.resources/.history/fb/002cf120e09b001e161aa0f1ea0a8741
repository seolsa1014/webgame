<%@ page import="java.sql.*, java.io.*, java.util.*, org.json.simple.JSONObject, org.json.simple.parser.JSONParser, org.json.simple.parser.ParseException" %>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>

<%
    // 데이터베이스 연결 정보
    String jdbcUrl = "jdbc:mysql://localhost:3306/websitedb";
    String dbUser = "root";
    String dbPassword = "690505";

    Connection conn = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;

    try {
        // JDBC 드라이버 로딩
        Class.forName("com.mysql.cj.jdbc.Driver");
        // 데이터베이스 연결
        conn = DriverManager.getConnection(jdbcUrl, dbUser, dbPassword);

        // login 테이블에서 현재 로그인한 사용자의 이름 가져오기
        String loggedInName = "";
        String getLoginNameQuery = "SELECT name FROM login WHERE id = 1";
        pstmt = conn.prepareStatement(getLoginNameQuery);
        rs = pstmt.executeQuery();
        if (rs.next()) {
            loggedInName = rs.getString("name");
        } else {
            // 로그인 정보가 없으면 로그인 페이지로 이동
            response.sendRedirect("login.jsp");
            return;
        }

        // 데이터베이스에서 해당 사용자의 정보 조회
        String query = "SELECT sequence, date FROM users WHERE name = ?";
        pstmt = conn.prepareStatement(query);
        pstmt.setString(1, loggedInName);
        rs = pstmt.executeQuery();

        if (rs.next()) {
            // sequence와 date 가져오기
            String sequenceString = rs.getString("sequence");
            int date = rs.getInt("date");

            // JSON 문자열을 JSON 객체로 파싱
            JSONParser parser = new JSONParser();
            JSONObject sequenceJson = (JSONObject) parser.parse(sequenceString);

            // date에 해당하는 값을 가져오기
            long value = (long) sequenceJson.get(String.valueOf(date - 1));

            // dayX.jsp로 이동
            String nextPage = "day" + value + ".jsp";
            response.sendRedirect(nextPage);
        } else {
            // 사용자 정보가 없는 경우, 처리할 내용 추가
            response.sendRedirect("load.jsp");
        }
    } catch (ClassNotFoundException | SQLException | ParseException e) {
        e.printStackTrace();
    } finally {
        try {
            if (rs != null) rs.close();
            if (pstmt != null) pstmt.close();
            if (conn != null) conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
%>

